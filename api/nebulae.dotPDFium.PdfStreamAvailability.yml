### YamlMime:ManagedReference
items:
- uid: nebulae.dotPDFium.PdfStreamAvailability
  commentId: T:nebulae.dotPDFium.PdfStreamAvailability
  id: PdfStreamAvailability
  parent: nebulae.dotPDFium
  children:
  - nebulae.dotPDFium.PdfStreamAvailability.#ctor(nebulae.dotPDFium.PdfStreamAvailabilityOptions)
  - nebulae.dotPDFium.PdfStreamAvailability.Dispose
  - nebulae.dotPDFium.PdfStreamAvailability.IsDocAvailable
  - nebulae.dotPDFium.PdfStreamAvailability.IsFormAvailable
  - nebulae.dotPDFium.PdfStreamAvailability.IsLinearized
  - nebulae.dotPDFium.PdfStreamAvailability.IsPageAvailable(System.Int32)
  - nebulae.dotPDFium.PdfStreamAvailability.TryLoadDocument(System.String)
  langs:
  - csharp
  - vb
  name: PdfStreamAvailability
  nameWithType: PdfStreamAvailability
  fullName: nebulae.dotPDFium.PdfStreamAvailability
  type: Class
  source:
    remote:
      path: dotPDFium/dotPDFium/PdfStreamAvailability.cs
      branch: main
      repo: https://github.com/nebulaeonline/dotPDFium.git
    id: PdfStreamAvailability
    path: ../dotPDFium/dotPDFium/dotPDFium/PdfStreamAvailability.cs
    startLine: 17
  assemblies:
  - dotPDFium
  namespace: nebulae.dotPDFium
  summary: >-
    Provides an interface for managing the availability of PDF data streams, enabling incremental loading and access to

    PDF documents and their components.
  remarks: >-
    This class is designed to facilitate the loading of PDF documents in scenarios where the data is
        retrieved incrementally, such as from a network stream. It provides methods to check the availability of the
        document, individual pages, and form data, as well as to determine whether the file is linearized (optimized for
        fast web viewing).  Instances of this class must be disposed of when no longer needed to release unmanaged
        resources.
  example: []
  syntax:
    content: 'public sealed class PdfStreamAvailability : IDisposable'
    content.vb: Public NotInheritable Class PdfStreamAvailability Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: nebulae.dotPDFium.PdfStreamAvailability.#ctor(nebulae.dotPDFium.PdfStreamAvailabilityOptions)
  commentId: M:nebulae.dotPDFium.PdfStreamAvailability.#ctor(nebulae.dotPDFium.PdfStreamAvailabilityOptions)
  id: '#ctor(nebulae.dotPDFium.PdfStreamAvailabilityOptions)'
  parent: nebulae.dotPDFium.PdfStreamAvailability
  langs:
  - csharp
  - vb
  name: PdfStreamAvailability(PdfStreamAvailabilityOptions)
  nameWithType: PdfStreamAvailability.PdfStreamAvailability(PdfStreamAvailabilityOptions)
  fullName: nebulae.dotPDFium.PdfStreamAvailability.PdfStreamAvailability(nebulae.dotPDFium.PdfStreamAvailabilityOptions)
  type: Constructor
  source:
    remote:
      path: dotPDFium/dotPDFium/PdfStreamAvailability.cs
      branch: main
      repo: https://github.com/nebulaeonline/dotPDFium.git
    id: .ctor
    path: ../dotPDFium/dotPDFium/dotPDFium/PdfStreamAvailability.cs
    startLine: 46
  assemblies:
  - dotPDFium
  namespace: nebulae.dotPDFium
  summary: >-
    Initializes a new instance of the <xref href="nebulae.dotPDFium.PdfStreamAvailability" data-throw-if-not-resolved="false"></xref> class,  which provides functionality for

    managing PDF stream availability using custom data access and availability callbacks.
  remarks: >-
    This constructor initializes the PDF stream availability context by pinning the provided user
        data and delegates  to prevent garbage collection during the lifetime of the instance. It also sets up the
        necessary native interop structures  for managing PDF data availability and download hints.
  example: []
  syntax:
    content: public PdfStreamAvailability(PdfStreamAvailabilityOptions options)
    parameters:
    - id: options
      type: nebulae.dotPDFium.PdfStreamAvailabilityOptions
      description: >-
        A <xref href="nebulae.dotPDFium.PdfStreamAvailabilityOptions" data-throw-if-not-resolved="false"></xref> object that specifies the configuration for the PDF stream
            availability,  including user data, data access callbacks, and availability checks.
    content.vb: Public Sub New(options As PdfStreamAvailabilityOptions)
  overload: nebulae.dotPDFium.PdfStreamAvailability.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">options</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> or if any of its required properties  (<xref href="nebulae.dotPDFium.PdfStreamAvailabilityOptions.UserData" data-throw-if-not-resolved="false"></xref>, <xref href="nebulae.dotPDFium.PdfStreamAvailabilityOptions.GetBlock" data-throw-if-not-resolved="false"></xref>,  <xref href="nebulae.dotPDFium.PdfStreamAvailabilityOptions.IsDataAvailable" data-throw-if-not-resolved="false"></xref>, or <xref href="nebulae.dotPDFium.PdfStreamAvailabilityOptions.RequestSegment" data-throw-if-not-resolved="false"></xref>) are <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: nebulae.dotPDFium.dotPDFiumException
    commentId: T:nebulae.dotPDFium.dotPDFiumException
    description: ''
  nameWithType.vb: PdfStreamAvailability.New(PdfStreamAvailabilityOptions)
  fullName.vb: nebulae.dotPDFium.PdfStreamAvailability.New(nebulae.dotPDFium.PdfStreamAvailabilityOptions)
  name.vb: New(PdfStreamAvailabilityOptions)
- uid: nebulae.dotPDFium.PdfStreamAvailability.TryLoadDocument(System.String)
  commentId: M:nebulae.dotPDFium.PdfStreamAvailability.TryLoadDocument(System.String)
  id: TryLoadDocument(System.String)
  parent: nebulae.dotPDFium.PdfStreamAvailability
  langs:
  - csharp
  - vb
  name: TryLoadDocument(string)
  nameWithType: PdfStreamAvailability.TryLoadDocument(string)
  fullName: nebulae.dotPDFium.PdfStreamAvailability.TryLoadDocument(string)
  type: Method
  source:
    remote:
      path: dotPDFium/dotPDFium/PdfStreamAvailability.cs
      branch: main
      repo: https://github.com/nebulaeonline/dotPDFium.git
    id: TryLoadDocument
    path: ../dotPDFium/dotPDFium/dotPDFium/PdfStreamAvailability.cs
    startLine: 94
  assemblies:
  - dotPDFium
  namespace: nebulae.dotPDFium
  summary: Attempts to load the PDF document from this availability context.
  example: []
  syntax:
    content: public PdfDocument? TryLoadDocument(string password = "")
    parameters:
    - id: password
      type: System.String
      description: The password, or empty string for no password.
    return:
      type: nebulae.dotPDFium.PdfDocument
      description: A <xref href="nebulae.dotPDFium.PdfDocument" data-throw-if-not-resolved="false"></xref> instance if the document is available; otherwise <code>null</code>.
    content.vb: Public Function TryLoadDocument(password As String = "") As PdfDocument
  overload: nebulae.dotPDFium.PdfStreamAvailability.TryLoadDocument*
  exceptions:
  - type: nebulae.dotPDFium.dotPDFiumException
    commentId: T:nebulae.dotPDFium.dotPDFiumException
    description: If PDFium returns an invalid handle despite IsDocAvailable returning true.
  nameWithType.vb: PdfStreamAvailability.TryLoadDocument(String)
  fullName.vb: nebulae.dotPDFium.PdfStreamAvailability.TryLoadDocument(String)
  name.vb: TryLoadDocument(String)
- uid: nebulae.dotPDFium.PdfStreamAvailability.IsLinearized
  commentId: M:nebulae.dotPDFium.PdfStreamAvailability.IsLinearized
  id: IsLinearized
  parent: nebulae.dotPDFium.PdfStreamAvailability
  langs:
  - csharp
  - vb
  name: IsLinearized()
  nameWithType: PdfStreamAvailability.IsLinearized()
  fullName: nebulae.dotPDFium.PdfStreamAvailability.IsLinearized()
  type: Method
  source:
    remote:
      path: dotPDFium/dotPDFium/PdfStreamAvailability.cs
      branch: main
      repo: https://github.com/nebulaeonline/dotPDFium.git
    id: IsLinearized
    path: ../dotPDFium/dotPDFium/dotPDFium/PdfStreamAvailability.cs
    startLine: 109
  assemblies:
  - dotPDFium
  namespace: nebulae.dotPDFium
  summary: Returns whether the underlying file is linearized (Fast Web View).
  example: []
  syntax:
    content: public bool IsLinearized()
    return:
      type: System.Boolean
    content.vb: Public Function IsLinearized() As Boolean
  overload: nebulae.dotPDFium.PdfStreamAvailability.IsLinearized*
- uid: nebulae.dotPDFium.PdfStreamAvailability.IsDocAvailable
  commentId: M:nebulae.dotPDFium.PdfStreamAvailability.IsDocAvailable
  id: IsDocAvailable
  parent: nebulae.dotPDFium.PdfStreamAvailability
  langs:
  - csharp
  - vb
  name: IsDocAvailable()
  nameWithType: PdfStreamAvailability.IsDocAvailable()
  fullName: nebulae.dotPDFium.PdfStreamAvailability.IsDocAvailable()
  type: Method
  source:
    remote:
      path: dotPDFium/dotPDFium/PdfStreamAvailability.cs
      branch: main
      repo: https://github.com/nebulaeonline/dotPDFium.git
    id: IsDocAvailable
    path: ../dotPDFium/dotPDFium/dotPDFium/PdfStreamAvailability.cs
    startLine: 151
  assemblies:
  - dotPDFium
  namespace: nebulae.dotPDFium
  summary: Determines whether the document is available for processing.
  remarks: >-
    This method checks the availability of the document using the underlying PDF data
        availability mechanism. It is typically used to verify whether the document can be accessed or processed
        further.
  example: []
  syntax:
    content: public bool IsDocAvailable()
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the document is available; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function IsDocAvailable() As Boolean
  overload: nebulae.dotPDFium.PdfStreamAvailability.IsDocAvailable*
- uid: nebulae.dotPDFium.PdfStreamAvailability.IsPageAvailable(System.Int32)
  commentId: M:nebulae.dotPDFium.PdfStreamAvailability.IsPageAvailable(System.Int32)
  id: IsPageAvailable(System.Int32)
  parent: nebulae.dotPDFium.PdfStreamAvailability
  langs:
  - csharp
  - vb
  name: IsPageAvailable(int)
  nameWithType: PdfStreamAvailability.IsPageAvailable(int)
  fullName: nebulae.dotPDFium.PdfStreamAvailability.IsPageAvailable(int)
  type: Method
  source:
    remote:
      path: dotPDFium/dotPDFium/PdfStreamAvailability.cs
      branch: main
      repo: https://github.com/nebulaeonline/dotPDFium.git
    id: IsPageAvailable
    path: ../dotPDFium/dotPDFium/dotPDFium/PdfStreamAvailability.cs
    startLine: 163
  assemblies:
  - dotPDFium
  namespace: nebulae.dotPDFium
  summary: Determines whether the specified page is available for viewing or processing.
  remarks: >-
    This method checks the availability of a page in the document, which may depend on factors
        such as the document's loading state or the availability of required resources.
  example: []
  syntax:
    content: public bool IsPageAvailable(int pageIndex)
    parameters:
    - id: pageIndex
      type: System.Int32
      description: The zero-based index of the page to check.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified page is available; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function IsPageAvailable(pageIndex As Integer) As Boolean
  overload: nebulae.dotPDFium.PdfStreamAvailability.IsPageAvailable*
  nameWithType.vb: PdfStreamAvailability.IsPageAvailable(Integer)
  fullName.vb: nebulae.dotPDFium.PdfStreamAvailability.IsPageAvailable(Integer)
  name.vb: IsPageAvailable(Integer)
- uid: nebulae.dotPDFium.PdfStreamAvailability.IsFormAvailable
  commentId: M:nebulae.dotPDFium.PdfStreamAvailability.IsFormAvailable
  id: IsFormAvailable
  parent: nebulae.dotPDFium.PdfStreamAvailability
  langs:
  - csharp
  - vb
  name: IsFormAvailable()
  nameWithType: PdfStreamAvailability.IsFormAvailable()
  fullName: nebulae.dotPDFium.PdfStreamAvailability.IsFormAvailable()
  type: Method
  source:
    remote:
      path: dotPDFium/dotPDFium/PdfStreamAvailability.cs
      branch: main
      repo: https://github.com/nebulaeonline/dotPDFium.git
    id: IsFormAvailable
    path: ../dotPDFium/dotPDFium/dotPDFium/PdfStreamAvailability.cs
    startLine: 174
  assemblies:
  - dotPDFium
  namespace: nebulae.dotPDFium
  summary: Determines whether the form data in the PDF document is available for use.
  remarks: >-
    This method checks the availability of form data in the PDF document.  It may be useful in
        scenarios where form data needs to be processed or accessed.
  example: []
  syntax:
    content: public bool IsFormAvailable()
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the form data is available; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function IsFormAvailable() As Boolean
  overload: nebulae.dotPDFium.PdfStreamAvailability.IsFormAvailable*
- uid: nebulae.dotPDFium.PdfStreamAvailability.Dispose
  commentId: M:nebulae.dotPDFium.PdfStreamAvailability.Dispose
  id: Dispose
  parent: nebulae.dotPDFium.PdfStreamAvailability
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: PdfStreamAvailability.Dispose()
  fullName: nebulae.dotPDFium.PdfStreamAvailability.Dispose()
  type: Method
  source:
    remote:
      path: dotPDFium/dotPDFium/PdfStreamAvailability.cs
      branch: main
      repo: https://github.com/nebulaeonline/dotPDFium.git
    id: Dispose
    path: ../dotPDFium/dotPDFium/dotPDFium/PdfStreamAvailability.cs
    startLine: 185
  assemblies:
  - dotPDFium
  namespace: nebulae.dotPDFium
  summary: Releases all resources used by the current instance of the class.
  remarks: >-
    This method should be called when the instance is no longer needed to free unmanaged
        resources  and release any allocated handles. After calling this method, the instance should not be
        used.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: nebulae.dotPDFium.PdfStreamAvailability.Dispose*
  implements:
  - System.IDisposable.Dispose
references:
- uid: nebulae.dotPDFium
  commentId: N:nebulae.dotPDFium
  href: nebulae.html
  name: nebulae.dotPDFium
  nameWithType: nebulae.dotPDFium
  fullName: nebulae.dotPDFium
  spec.csharp:
  - uid: nebulae
    name: nebulae
    href: nebulae.html
  - name: .
  - uid: nebulae.dotPDFium
    name: dotPDFium
    href: nebulae.dotPDFium.html
  spec.vb:
  - uid: nebulae
    name: nebulae
    href: nebulae.html
  - name: .
  - uid: nebulae.dotPDFium
    name: dotPDFium
    href: nebulae.dotPDFium.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: nebulae.dotPDFium.PdfStreamAvailability
  commentId: T:nebulae.dotPDFium.PdfStreamAvailability
  href: nebulae.dotPDFium.PdfStreamAvailability.html
  name: PdfStreamAvailability
  nameWithType: PdfStreamAvailability
  fullName: nebulae.dotPDFium.PdfStreamAvailability
- uid: nebulae.dotPDFium.PdfStreamAvailabilityOptions
  commentId: T:nebulae.dotPDFium.PdfStreamAvailabilityOptions
  parent: nebulae.dotPDFium
  href: nebulae.dotPDFium.PdfStreamAvailabilityOptions.html
  name: PdfStreamAvailabilityOptions
  nameWithType: PdfStreamAvailabilityOptions
  fullName: nebulae.dotPDFium.PdfStreamAvailabilityOptions
- uid: nebulae.dotPDFium.PdfStreamAvailabilityOptions.UserData
  commentId: P:nebulae.dotPDFium.PdfStreamAvailabilityOptions.UserData
  href: nebulae.dotPDFium.PdfStreamAvailabilityOptions.html#nebulae_dotPDFium_PdfStreamAvailabilityOptions_UserData
  name: UserData
  nameWithType: PdfStreamAvailabilityOptions.UserData
  fullName: nebulae.dotPDFium.PdfStreamAvailabilityOptions.UserData
- uid: nebulae.dotPDFium.PdfStreamAvailabilityOptions.GetBlock
  commentId: P:nebulae.dotPDFium.PdfStreamAvailabilityOptions.GetBlock
  href: nebulae.dotPDFium.PdfStreamAvailabilityOptions.html#nebulae_dotPDFium_PdfStreamAvailabilityOptions_GetBlock
  name: GetBlock
  nameWithType: PdfStreamAvailabilityOptions.GetBlock
  fullName: nebulae.dotPDFium.PdfStreamAvailabilityOptions.GetBlock
- uid: nebulae.dotPDFium.PdfStreamAvailabilityOptions.IsDataAvailable
  commentId: P:nebulae.dotPDFium.PdfStreamAvailabilityOptions.IsDataAvailable
  href: nebulae.dotPDFium.PdfStreamAvailabilityOptions.html#nebulae_dotPDFium_PdfStreamAvailabilityOptions_IsDataAvailable
  name: IsDataAvailable
  nameWithType: PdfStreamAvailabilityOptions.IsDataAvailable
  fullName: nebulae.dotPDFium.PdfStreamAvailabilityOptions.IsDataAvailable
- uid: nebulae.dotPDFium.PdfStreamAvailabilityOptions.RequestSegment
  commentId: P:nebulae.dotPDFium.PdfStreamAvailabilityOptions.RequestSegment
  href: nebulae.dotPDFium.PdfStreamAvailabilityOptions.html#nebulae_dotPDFium_PdfStreamAvailabilityOptions_RequestSegment
  name: RequestSegment
  nameWithType: PdfStreamAvailabilityOptions.RequestSegment
  fullName: nebulae.dotPDFium.PdfStreamAvailabilityOptions.RequestSegment
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: nebulae.dotPDFium.dotPDFiumException
  commentId: T:nebulae.dotPDFium.dotPDFiumException
  href: nebulae.dotPDFium.dotPDFiumException.html
  name: dotPDFiumException
  nameWithType: dotPDFiumException
  fullName: nebulae.dotPDFium.dotPDFiumException
- uid: nebulae.dotPDFium.PdfStreamAvailability.#ctor*
  commentId: Overload:nebulae.dotPDFium.PdfStreamAvailability.#ctor
  href: nebulae.dotPDFium.PdfStreamAvailability.html#nebulae_dotPDFium_PdfStreamAvailability__ctor_nebulae_dotPDFium_PdfStreamAvailabilityOptions_
  name: PdfStreamAvailability
  nameWithType: PdfStreamAvailability.PdfStreamAvailability
  fullName: nebulae.dotPDFium.PdfStreamAvailability.PdfStreamAvailability
  nameWithType.vb: PdfStreamAvailability.New
  fullName.vb: nebulae.dotPDFium.PdfStreamAvailability.New
  name.vb: New
- uid: nebulae.dotPDFium.PdfDocument
  commentId: T:nebulae.dotPDFium.PdfDocument
  parent: nebulae.dotPDFium
  href: nebulae.dotPDFium.PdfDocument.html
  name: PdfDocument
  nameWithType: PdfDocument
  fullName: nebulae.dotPDFium.PdfDocument
- uid: nebulae.dotPDFium.PdfStreamAvailability.TryLoadDocument*
  commentId: Overload:nebulae.dotPDFium.PdfStreamAvailability.TryLoadDocument
  href: nebulae.dotPDFium.PdfStreamAvailability.html#nebulae_dotPDFium_PdfStreamAvailability_TryLoadDocument_System_String_
  name: TryLoadDocument
  nameWithType: PdfStreamAvailability.TryLoadDocument
  fullName: nebulae.dotPDFium.PdfStreamAvailability.TryLoadDocument
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: nebulae.dotPDFium.PdfStreamAvailability.IsLinearized*
  commentId: Overload:nebulae.dotPDFium.PdfStreamAvailability.IsLinearized
  href: nebulae.dotPDFium.PdfStreamAvailability.html#nebulae_dotPDFium_PdfStreamAvailability_IsLinearized
  name: IsLinearized
  nameWithType: PdfStreamAvailability.IsLinearized
  fullName: nebulae.dotPDFium.PdfStreamAvailability.IsLinearized
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: nebulae.dotPDFium.PdfStreamAvailability.IsDocAvailable*
  commentId: Overload:nebulae.dotPDFium.PdfStreamAvailability.IsDocAvailable
  href: nebulae.dotPDFium.PdfStreamAvailability.html#nebulae_dotPDFium_PdfStreamAvailability_IsDocAvailable
  name: IsDocAvailable
  nameWithType: PdfStreamAvailability.IsDocAvailable
  fullName: nebulae.dotPDFium.PdfStreamAvailability.IsDocAvailable
- uid: nebulae.dotPDFium.PdfStreamAvailability.IsPageAvailable*
  commentId: Overload:nebulae.dotPDFium.PdfStreamAvailability.IsPageAvailable
  href: nebulae.dotPDFium.PdfStreamAvailability.html#nebulae_dotPDFium_PdfStreamAvailability_IsPageAvailable_System_Int32_
  name: IsPageAvailable
  nameWithType: PdfStreamAvailability.IsPageAvailable
  fullName: nebulae.dotPDFium.PdfStreamAvailability.IsPageAvailable
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: nebulae.dotPDFium.PdfStreamAvailability.IsFormAvailable*
  commentId: Overload:nebulae.dotPDFium.PdfStreamAvailability.IsFormAvailable
  href: nebulae.dotPDFium.PdfStreamAvailability.html#nebulae_dotPDFium_PdfStreamAvailability_IsFormAvailable
  name: IsFormAvailable
  nameWithType: PdfStreamAvailability.IsFormAvailable
  fullName: nebulae.dotPDFium.PdfStreamAvailability.IsFormAvailable
- uid: nebulae.dotPDFium.PdfStreamAvailability.Dispose*
  commentId: Overload:nebulae.dotPDFium.PdfStreamAvailability.Dispose
  href: nebulae.dotPDFium.PdfStreamAvailability.html#nebulae_dotPDFium_PdfStreamAvailability_Dispose
  name: Dispose
  nameWithType: PdfStreamAvailability.Dispose
  fullName: nebulae.dotPDFium.PdfStreamAvailability.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
