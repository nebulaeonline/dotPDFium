### YamlMime:ManagedReference
items:
- uid: nebulae.dotPDFium.PdfAttachment
  commentId: T:nebulae.dotPDFium.PdfAttachment
  id: PdfAttachment
  parent: nebulae.dotPDFium
  children:
  - nebulae.dotPDFium.PdfAttachment.GetFile
  - nebulae.dotPDFium.PdfAttachment.GetName
  - nebulae.dotPDFium.PdfAttachment.GetStringValue(System.String)
  - nebulae.dotPDFium.PdfAttachment.GetSubtype
  - nebulae.dotPDFium.PdfAttachment.GetValueType(System.String)
  - nebulae.dotPDFium.PdfAttachment.HasKey(System.String)
  - nebulae.dotPDFium.PdfAttachment.SetFile(System.Byte[],nebulae.dotPDFium.PdfDocument)
  - nebulae.dotPDFium.PdfAttachment.SetStringValue(System.String,System.String)
  langs:
  - csharp
  - vb
  name: PdfAttachment
  nameWithType: PdfAttachment
  fullName: nebulae.dotPDFium.PdfAttachment
  type: Class
  source:
    remote:
      path: dotPDFium/dotPDFium/PdfAttachment.cs
      branch: main
      repo: https://github.com/nebulaeonline/dotPDFium.git
    id: PdfAttachment
    path: ../dotPDFium/dotPDFium/dotPDFium/PdfAttachment.cs
    startLine: 10
  assemblies:
  - dotPDFium
  namespace: nebulae.dotPDFium
  syntax:
    content: public class PdfAttachment
    content.vb: Public Class PdfAttachment
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: nebulae.dotPDFium.PdfAttachment.GetFile
  commentId: M:nebulae.dotPDFium.PdfAttachment.GetFile
  id: GetFile
  parent: nebulae.dotPDFium.PdfAttachment
  langs:
  - csharp
  - vb
  name: GetFile()
  nameWithType: PdfAttachment.GetFile()
  fullName: nebulae.dotPDFium.PdfAttachment.GetFile()
  type: Method
  source:
    remote:
      path: dotPDFium/dotPDFium/PdfAttachment.cs
      branch: main
      repo: https://github.com/nebulaeonline/dotPDFium.git
    id: GetFile
    path: ../dotPDFium/dotPDFium/dotPDFium/PdfAttachment.cs
    startLine: 28
  assemblies:
  - dotPDFium
  namespace: nebulae.dotPDFium
  summary: Retrieves the file contents of the PDF attachment as a byte array.
  remarks: >-
    This method performs two passes to retrieve the file contents. The first pass determines the
        required buffer size,  and the second pass reads the actual data into the buffer. If the file cannot be
        retrieved, an empty byte array is returned.
  example: []
  syntax:
    content: public byte[] GetFile()
    return:
      type: System.Byte[]
      description: >-
        A byte array containing the file contents of the PDF attachment. Returns an empty array if the file is not
            available.
    content.vb: Public Function GetFile() As Byte()
  overload: nebulae.dotPDFium.PdfAttachment.GetFile*
  exceptions:
  - type: nebulae.dotPDFium.dotPDFiumException
    commentId: T:nebulae.dotPDFium.dotPDFiumException
    description: Thrown if the file contents cannot be retrieved during the second pass.
- uid: nebulae.dotPDFium.PdfAttachment.GetName
  commentId: M:nebulae.dotPDFium.PdfAttachment.GetName
  id: GetName
  parent: nebulae.dotPDFium.PdfAttachment
  langs:
  - csharp
  - vb
  name: GetName()
  nameWithType: PdfAttachment.GetName()
  fullName: nebulae.dotPDFium.PdfAttachment.GetName()
  type: Method
  source:
    remote:
      path: dotPDFium/dotPDFium/PdfAttachment.cs
      branch: main
      repo: https://github.com/nebulaeonline/dotPDFium.git
    id: GetName
    path: ../dotPDFium/dotPDFium/dotPDFium/PdfAttachment.cs
    startLine: 56
  assemblies:
  - dotPDFium
  namespace: nebulae.dotPDFium
  summary: Retrieves the name of the PDF attachment.
  remarks: >-
    The returned string excludes any null terminator that may be present in the underlying
        data.
  example: []
  syntax:
    content: public string GetName()
    return:
      type: System.String
      description: >-
        A <xref href="System.String" data-throw-if-not-resolved="false"></xref> containing the name of the attachment. Returns an empty string if the name is not
            available.
    content.vb: Public Function GetName() As String
  overload: nebulae.dotPDFium.PdfAttachment.GetName*
- uid: nebulae.dotPDFium.PdfAttachment.HasKey(System.String)
  commentId: M:nebulae.dotPDFium.PdfAttachment.HasKey(System.String)
  id: HasKey(System.String)
  parent: nebulae.dotPDFium.PdfAttachment
  langs:
  - csharp
  - vb
  name: HasKey(string)
  nameWithType: PdfAttachment.HasKey(string)
  fullName: nebulae.dotPDFium.PdfAttachment.HasKey(string)
  type: Method
  source:
    remote:
      path: dotPDFium/dotPDFium/PdfAttachment.cs
      branch: main
      repo: https://github.com/nebulaeonline/dotPDFium.git
    id: HasKey
    path: ../dotPDFium/dotPDFium/dotPDFium/PdfAttachment.cs
    startLine: 71
  assemblies:
  - dotPDFium
  namespace: nebulae.dotPDFium
  summary: Determines whether the attachment contains a specific key.
  example: []
  syntax:
    content: public bool HasKey(string key)
    parameters:
    - id: key
      type: System.String
      description: The name of the key to check for. This value cannot be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> or empty.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the attachment contains the specified key; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function HasKey(key As String) As Boolean
  overload: nebulae.dotPDFium.PdfAttachment.HasKey*
  nameWithType.vb: PdfAttachment.HasKey(String)
  fullName.vb: nebulae.dotPDFium.PdfAttachment.HasKey(String)
  name.vb: HasKey(String)
- uid: nebulae.dotPDFium.PdfAttachment.GetValueType(System.String)
  commentId: M:nebulae.dotPDFium.PdfAttachment.GetValueType(System.String)
  id: GetValueType(System.String)
  parent: nebulae.dotPDFium.PdfAttachment
  langs:
  - csharp
  - vb
  name: GetValueType(string)
  nameWithType: PdfAttachment.GetValueType(string)
  fullName: nebulae.dotPDFium.PdfAttachment.GetValueType(string)
  type: Method
  source:
    remote:
      path: dotPDFium/dotPDFium/PdfAttachment.cs
      branch: main
      repo: https://github.com/nebulaeonline/dotPDFium.git
    id: GetValueType
    path: ../dotPDFium/dotPDFium/dotPDFium/PdfAttachment.cs
    startLine: 81
  assemblies:
  - dotPDFium
  namespace: nebulae.dotPDFium
  summary: Retrieves the type of value associated with the specified key in the attachment.
  example: []
  syntax:
    content: public AttachmentValueType GetValueType(string key)
    parameters:
    - id: key
      type: System.String
      description: The key identifying the value in the attachment. Cannot be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> or empty.
    return:
      type: nebulae.dotPDFium.Native.AttachmentValueType
      description: The <xref href="nebulae.dotPDFium.Native.AttachmentValueType" data-throw-if-not-resolved="false"></xref> representing the type of the value associated with the specified key.
    content.vb: Public Function GetValueType(key As String) As AttachmentValueType
  overload: nebulae.dotPDFium.PdfAttachment.GetValueType*
  nameWithType.vb: PdfAttachment.GetValueType(String)
  fullName.vb: nebulae.dotPDFium.PdfAttachment.GetValueType(String)
  name.vb: GetValueType(String)
- uid: nebulae.dotPDFium.PdfAttachment.GetStringValue(System.String)
  commentId: M:nebulae.dotPDFium.PdfAttachment.GetStringValue(System.String)
  id: GetStringValue(System.String)
  parent: nebulae.dotPDFium.PdfAttachment
  langs:
  - csharp
  - vb
  name: GetStringValue(string)
  nameWithType: PdfAttachment.GetStringValue(string)
  fullName: nebulae.dotPDFium.PdfAttachment.GetStringValue(string)
  type: Method
  source:
    remote:
      path: dotPDFium/dotPDFium/PdfAttachment.cs
      branch: main
      repo: https://github.com/nebulaeonline/dotPDFium.git
    id: GetStringValue
    path: ../dotPDFium/dotPDFium/dotPDFium/PdfAttachment.cs
    startLine: 92
  assemblies:
  - dotPDFium
  namespace: nebulae.dotPDFium
  summary: Retrieves the string value associated with the specified key from the attachment.
  example: []
  syntax:
    content: public string GetStringValue(string key)
    parameters:
    - id: key
      type: System.String
      description: The key identifying the string value to retrieve. Cannot be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> or empty.
    return:
      type: System.String
      description: >-
        The string value associated with the specified key, or an empty string if the key does not exist or the value is
            empty.
    content.vb: Public Function GetStringValue(key As String) As String
  overload: nebulae.dotPDFium.PdfAttachment.GetStringValue*
  nameWithType.vb: PdfAttachment.GetStringValue(String)
  fullName.vb: nebulae.dotPDFium.PdfAttachment.GetStringValue(String)
  name.vb: GetStringValue(String)
- uid: nebulae.dotPDFium.PdfAttachment.SetStringValue(System.String,System.String)
  commentId: M:nebulae.dotPDFium.PdfAttachment.SetStringValue(System.String,System.String)
  id: SetStringValue(System.String,System.String)
  parent: nebulae.dotPDFium.PdfAttachment
  langs:
  - csharp
  - vb
  name: SetStringValue(string, string)
  nameWithType: PdfAttachment.SetStringValue(string, string)
  fullName: nebulae.dotPDFium.PdfAttachment.SetStringValue(string, string)
  type: Method
  source:
    remote:
      path: dotPDFium/dotPDFium/PdfAttachment.cs
      branch: main
      repo: https://github.com/nebulaeonline/dotPDFium.git
    id: SetStringValue
    path: ../dotPDFium/dotPDFium/dotPDFium/PdfAttachment.cs
    startLine: 111
  assemblies:
  - dotPDFium
  namespace: nebulae.dotPDFium
  summary: Sets a string value associated with the specified key.
  remarks: >-
    This method associates a string value with a given key. If the operation fails, an exception
        is thrown. Ensure that both <code class="paramref">key</code> and <code class="paramref">value</code> are valid and non-null before
        calling this method.
  example: []
  syntax:
    content: public void SetStringValue(string key, string value)
    parameters:
    - id: key
      type: System.String
      description: The key identifying the value to set. Cannot be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> or empty.
    - id: value
      type: System.String
      description: The string value to associate with the specified key. Cannot be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    content.vb: Public Sub SetStringValue(key As String, value As String)
  overload: nebulae.dotPDFium.PdfAttachment.SetStringValue*
  exceptions:
  - type: nebulae.dotPDFium.dotPDFiumException
    commentId: T:nebulae.dotPDFium.dotPDFiumException
    description: Thrown if the operation fails to set the string value for the specified key.
  nameWithType.vb: PdfAttachment.SetStringValue(String, String)
  fullName.vb: nebulae.dotPDFium.PdfAttachment.SetStringValue(String, String)
  name.vb: SetStringValue(String, String)
- uid: nebulae.dotPDFium.PdfAttachment.SetFile(System.Byte[],nebulae.dotPDFium.PdfDocument)
  commentId: M:nebulae.dotPDFium.PdfAttachment.SetFile(System.Byte[],nebulae.dotPDFium.PdfDocument)
  id: SetFile(System.Byte[],nebulae.dotPDFium.PdfDocument)
  parent: nebulae.dotPDFium.PdfAttachment
  langs:
  - csharp
  - vb
  name: SetFile(byte[], PdfDocument)
  nameWithType: PdfAttachment.SetFile(byte[], PdfDocument)
  fullName: nebulae.dotPDFium.PdfAttachment.SetFile(byte[], nebulae.dotPDFium.PdfDocument)
  type: Method
  source:
    remote:
      path: dotPDFium/dotPDFium/PdfAttachment.cs
      branch: main
      repo: https://github.com/nebulaeonline/dotPDFium.git
    id: SetFile
    path: ../dotPDFium/dotPDFium/dotPDFium/PdfAttachment.cs
    startLine: 127
  assemblies:
  - dotPDFium
  namespace: nebulae.dotPDFium
  summary: Associates a file with the current PDF attachment.
  remarks: >-
    This method sets the file data for the current attachment in the specified PDF document.  The
        file data is passed as a byte array and must be valid and non-empty.  If the operation fails, a <xref href="nebulae.dotPDFium.dotPDFiumException" data-throw-if-not-resolved="false"></xref> is thrown.
  example: []
  syntax:
    content: public void SetFile(byte[] data, PdfDocument doc)
    parameters:
    - id: data
      type: System.Byte[]
      description: The file data to associate with the attachment. Must not be null or empty.
    - id: doc
      type: nebulae.dotPDFium.PdfDocument
      description: The PDF document to which the attachment belongs. Must not be null.
    content.vb: Public Sub SetFile(data As Byte(), doc As PdfDocument)
  overload: nebulae.dotPDFium.PdfAttachment.SetFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <code class="paramref">data</code> is null or empty.
  - type: nebulae.dotPDFium.dotPDFiumException
    commentId: T:nebulae.dotPDFium.dotPDFiumException
    description: Thrown if the file data could not be set on the attachment.
  nameWithType.vb: PdfAttachment.SetFile(Byte(), PdfDocument)
  fullName.vb: nebulae.dotPDFium.PdfAttachment.SetFile(Byte(), nebulae.dotPDFium.PdfDocument)
  name.vb: SetFile(Byte(), PdfDocument)
- uid: nebulae.dotPDFium.PdfAttachment.GetSubtype
  commentId: M:nebulae.dotPDFium.PdfAttachment.GetSubtype
  id: GetSubtype
  parent: nebulae.dotPDFium.PdfAttachment
  langs:
  - csharp
  - vb
  name: GetSubtype()
  nameWithType: PdfAttachment.GetSubtype()
  fullName: nebulae.dotPDFium.PdfAttachment.GetSubtype()
  type: Method
  source:
    remote:
      path: dotPDFium/dotPDFium/PdfAttachment.cs
      branch: main
      repo: https://github.com/nebulaeonline/dotPDFium.git
    id: GetSubtype
    path: ../dotPDFium/dotPDFium/dotPDFium/PdfAttachment.cs
    startLine: 152
  assemblies:
  - dotPDFium
  namespace: nebulae.dotPDFium
  summary: Retrieves the subtype of the PDF attachment.
  remarks: >-
    The subtype typically provides additional information about the attachment's type or
        purpose.
  example: []
  syntax:
    content: public string GetSubtype()
    return:
      type: System.String
      description: >-
        A <xref href="System.String" data-throw-if-not-resolved="false"></xref> representing the subtype of the attachment.  Returns an empty string if the subtype is
            not defined or cannot be retrieved.
    content.vb: Public Function GetSubtype() As String
  overload: nebulae.dotPDFium.PdfAttachment.GetSubtype*
references:
- uid: nebulae.dotPDFium
  commentId: N:nebulae.dotPDFium
  href: nebulae.html
  name: nebulae.dotPDFium
  nameWithType: nebulae.dotPDFium
  fullName: nebulae.dotPDFium
  spec.csharp:
  - uid: nebulae
    name: nebulae
    href: nebulae.html
  - name: .
  - uid: nebulae.dotPDFium
    name: dotPDFium
    href: nebulae.dotPDFium.html
  spec.vb:
  - uid: nebulae
    name: nebulae
    href: nebulae.html
  - name: .
  - uid: nebulae.dotPDFium
    name: dotPDFium
    href: nebulae.dotPDFium.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: nebulae.dotPDFium.dotPDFiumException
  commentId: T:nebulae.dotPDFium.dotPDFiumException
  href: nebulae.dotPDFium.dotPDFiumException.html
  name: dotPDFiumException
  nameWithType: dotPDFiumException
  fullName: nebulae.dotPDFium.dotPDFiumException
- uid: nebulae.dotPDFium.PdfAttachment.GetFile*
  commentId: Overload:nebulae.dotPDFium.PdfAttachment.GetFile
  href: nebulae.dotPDFium.PdfAttachment.html#nebulae_dotPDFium_PdfAttachment_GetFile
  name: GetFile
  nameWithType: PdfAttachment.GetFile
  fullName: nebulae.dotPDFium.PdfAttachment.GetFile
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: nebulae.dotPDFium.PdfAttachment.GetName*
  commentId: Overload:nebulae.dotPDFium.PdfAttachment.GetName
  href: nebulae.dotPDFium.PdfAttachment.html#nebulae_dotPDFium_PdfAttachment_GetName
  name: GetName
  nameWithType: PdfAttachment.GetName
  fullName: nebulae.dotPDFium.PdfAttachment.GetName
- uid: nebulae.dotPDFium.PdfAttachment.HasKey*
  commentId: Overload:nebulae.dotPDFium.PdfAttachment.HasKey
  href: nebulae.dotPDFium.PdfAttachment.html#nebulae_dotPDFium_PdfAttachment_HasKey_System_String_
  name: HasKey
  nameWithType: PdfAttachment.HasKey
  fullName: nebulae.dotPDFium.PdfAttachment.HasKey
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: nebulae.dotPDFium.Native.AttachmentValueType
  commentId: T:nebulae.dotPDFium.Native.AttachmentValueType
  parent: nebulae.dotPDFium.Native
  href: nebulae.dotPDFium.Native.AttachmentValueType.html
  name: AttachmentValueType
  nameWithType: AttachmentValueType
  fullName: nebulae.dotPDFium.Native.AttachmentValueType
- uid: nebulae.dotPDFium.PdfAttachment.GetValueType*
  commentId: Overload:nebulae.dotPDFium.PdfAttachment.GetValueType
  href: nebulae.dotPDFium.PdfAttachment.html#nebulae_dotPDFium_PdfAttachment_GetValueType_System_String_
  name: GetValueType
  nameWithType: PdfAttachment.GetValueType
  fullName: nebulae.dotPDFium.PdfAttachment.GetValueType
- uid: nebulae.dotPDFium.Native
  commentId: N:nebulae.dotPDFium.Native
  href: nebulae.html
  name: nebulae.dotPDFium.Native
  nameWithType: nebulae.dotPDFium.Native
  fullName: nebulae.dotPDFium.Native
  spec.csharp:
  - uid: nebulae
    name: nebulae
    href: nebulae.html
  - name: .
  - uid: nebulae.dotPDFium
    name: dotPDFium
    href: nebulae.dotPDFium.html
  - name: .
  - uid: nebulae.dotPDFium.Native
    name: Native
    href: nebulae.dotPDFium.Native.html
  spec.vb:
  - uid: nebulae
    name: nebulae
    href: nebulae.html
  - name: .
  - uid: nebulae.dotPDFium
    name: dotPDFium
    href: nebulae.dotPDFium.html
  - name: .
  - uid: nebulae.dotPDFium.Native
    name: Native
    href: nebulae.dotPDFium.Native.html
- uid: nebulae.dotPDFium.PdfAttachment.GetStringValue*
  commentId: Overload:nebulae.dotPDFium.PdfAttachment.GetStringValue
  href: nebulae.dotPDFium.PdfAttachment.html#nebulae_dotPDFium_PdfAttachment_GetStringValue_System_String_
  name: GetStringValue
  nameWithType: PdfAttachment.GetStringValue
  fullName: nebulae.dotPDFium.PdfAttachment.GetStringValue
- uid: nebulae.dotPDFium.PdfAttachment.SetStringValue*
  commentId: Overload:nebulae.dotPDFium.PdfAttachment.SetStringValue
  href: nebulae.dotPDFium.PdfAttachment.html#nebulae_dotPDFium_PdfAttachment_SetStringValue_System_String_System_String_
  name: SetStringValue
  nameWithType: PdfAttachment.SetStringValue
  fullName: nebulae.dotPDFium.PdfAttachment.SetStringValue
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: nebulae.dotPDFium.PdfAttachment.SetFile*
  commentId: Overload:nebulae.dotPDFium.PdfAttachment.SetFile
  href: nebulae.dotPDFium.PdfAttachment.html#nebulae_dotPDFium_PdfAttachment_SetFile_System_Byte___nebulae_dotPDFium_PdfDocument_
  name: SetFile
  nameWithType: PdfAttachment.SetFile
  fullName: nebulae.dotPDFium.PdfAttachment.SetFile
- uid: nebulae.dotPDFium.PdfDocument
  commentId: T:nebulae.dotPDFium.PdfDocument
  parent: nebulae.dotPDFium
  href: nebulae.dotPDFium.PdfDocument.html
  name: PdfDocument
  nameWithType: PdfDocument
  fullName: nebulae.dotPDFium.PdfDocument
- uid: nebulae.dotPDFium.PdfAttachment.GetSubtype*
  commentId: Overload:nebulae.dotPDFium.PdfAttachment.GetSubtype
  href: nebulae.dotPDFium.PdfAttachment.html#nebulae_dotPDFium_PdfAttachment_GetSubtype
  name: GetSubtype
  nameWithType: PdfAttachment.GetSubtype
  fullName: nebulae.dotPDFium.PdfAttachment.GetSubtype
